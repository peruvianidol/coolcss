.#{$prefix}-styles {
  label:not(.#{$prefix}-form-control) {
    font-weight: $font-weight-semibold;
    display: block;
    margin-bottom: $spacing-4;

    [type="checkbox"] + span,
    [type="radio"] + span {
      font-weight: $font-weight-normal;
    }
  }

  fieldset {
    border: 0;
  }

  legend {
    font-weight: $font-weight-semibold;
  }
}

.#{$prefix} {
  &-input {
    appearance: none;
    --form-field-width: #{$form-field-width-default};
    background-color: $form-field-background-color;
    border: $form-field-border;
    border-radius: $form-field-border-radius;
    font-size: $text-medium-font-size;
    width: 100%;
    min-height: $form-field-min-height;

    @media (min-width: $breakpoint-medium) {
      width: var(--form-field-width, $form-field-width-default);
    }

    &:not(textarea) {
      line-height: 1.5;
    }

    &:not(.#{$prefix}-select) {
      padding: $form-field-padding;
    }

    &:is(textarea) {
      line-height: $text-medium-line-height;
    }

    // URL encode the # of the hex value (see functions)
    $arrow-color: encodecolor($color-icon-default);

    &:is(select) {
      appearance: none;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 5'%3E%3Cpath d='M0 0h8L4 5z' fill='#{$arrow-color}'/%3E%3C/svg%3E%0A");
      background-size: $form-field-arrow-size;
      background-position: $form-field-background-position;

      &:disabled {
        color: $color-text-subdued;
      }
    }

    &:focus {
      border-color: $color-border-focus;
      box-shadow: 0 0 .35em -.1em $color-border-focus;
      outline: $border-width-thick solid transparent;
    }

    &:disabled {
      border-color: $color-border-disabled;
      background-color: $color-background-disabled;
      cursor: not-allowed;
    }

    &::placeholder {
      color: $color-text-subdued;
    }
  }

  &-form-control {
    display: grid;
    align-items: center;
    grid-template-columns: $form-control-size 1fr;
    grid-gap: $form-field-padding;

    &:not(:last-child) {
      margin-bottom: $spacing-4;
    }

    input {
      appearance: none;
      width: $form-control-size;
      height: $form-control-size;
      border: $border-width-thick solid $color-border-default;
      position: relative;

      &[type="radio"] {
        border-radius: 50%;
      }

      &[type="checkbox"] {
        border-radius: $border-radius-small;
      }

      &:focus {
        border-color: $color-border-focus;
        box-shadow: 0 0 .35em -.1em $color-border-focus;
        outline: $border-width-thick solid transparent;
      }

      &:checked {
        border-color: $form-control-border;

        &[type="radio"]:before {
          content: "";
          display: block;
          width: calc(#{$form-control-size} - 8px);
          height: calc(#{$form-control-size} - 8px);
          background-color: $form-control-background;
          border-radius: 50%;
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
        }

        // URL encode the # of the hex value (see functions)
        $check-color: encodecolor($color-icon-inverse);
    
        &[type="checkbox"] {
          background-color: $form-control-background;
          background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Cpath d='M12 30c-.5 0-1-.2-1.4-.6l-8-8c-.8-.8-.8-2 0-2.8.8-.8 2-.8 2.8 0l6.3 6.3 14.6-22c.6-.9 1.9-1.2 2.8-.6.9.6 1.2 1.9.6 2.8l-16 24c-.3.5-.9.8-1.5.9H12z' fill='#{$check-color}'/%3E%3C/svg%3E%0A");
          background-size: calc(#{$form-control-size} * .65) calc(#{$form-control-size} * .65);
          background-position: 50% 50%;
        }
      }

      &:disabled {
        background-color: $color-gray-200;
        border-color: $color-gray-400;

        & + span {
          color: $color-text-subdued;
        }
      }
    }
  }

  &-button {
    display: inline-block;
    appearance: none;
    border: $button-border;
    border-radius: $button-radius;
    padding: $button-padding;
    margin: 0;
    background-color: $form-control-background;
    color: $color-text-inverse;
    font-size: $text-medium-font-size;
    line-height: $text-medium-line-height;
    font-weight: $button-font-weight;
    min-height: $button-min-height;
    cursor: pointer;

    &:focus {
      border-color: $color-border-focus;
      box-shadow: 0 0 .35em -.1em $color-border-focus;
      outline: $border-width-thick solid transparent;      
    }

    &:hover {
      background-color: $form-control-background-highlight;
    }
  }
}